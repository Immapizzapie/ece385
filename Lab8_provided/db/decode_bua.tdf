--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=16 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 18.0 cbx_cycloneii 2018:04:24:18:04:18:SJ cbx_lpm_add_sub 2018:04:24:18:04:18:SJ cbx_lpm_compare 2018:04:24:18:04:18:SJ cbx_lpm_decode 2018:04:24:18:04:18:SJ cbx_mgl 2018:04:24:18:08:49:SJ cbx_nadder 2018:04:24:18:04:18:SJ cbx_stratix 2018:04:24:18:04:18:SJ cbx_stratixii 2018:04:24:18:04:18:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_bua
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[15..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode1007w[3..0]	: WIRE;
	w_anode1019w[1..0]	: WIRE;
	w_anode1026w[3..0]	: WIRE;
	w_anode1037w[3..0]	: WIRE;
	w_anode1047w[3..0]	: WIRE;
	w_anode1057w[3..0]	: WIRE;
	w_anode1067w[3..0]	: WIRE;
	w_anode1077w[3..0]	: WIRE;
	w_anode1087w[3..0]	: WIRE;
	w_anode1097w[3..0]	: WIRE;
	w_anode921w[1..0]	: WIRE;
	w_anode930w[3..0]	: WIRE;
	w_anode947w[3..0]	: WIRE;
	w_anode957w[3..0]	: WIRE;
	w_anode967w[3..0]	: WIRE;
	w_anode977w[3..0]	: WIRE;
	w_anode987w[3..0]	: WIRE;
	w_anode997w[3..0]	: WIRE;
	w_data919w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[15..0] = eq_wire[15..0];
	eq_wire[] = ( ( w_anode1097w[3..3], w_anode1087w[3..3], w_anode1077w[3..3], w_anode1067w[3..3], w_anode1057w[3..3], w_anode1047w[3..3], w_anode1037w[3..3], w_anode1026w[3..3]), ( w_anode1007w[3..3], w_anode997w[3..3], w_anode987w[3..3], w_anode977w[3..3], w_anode967w[3..3], w_anode957w[3..3], w_anode947w[3..3], w_anode930w[3..3]));
	w_anode1007w[] = ( (w_anode1007w[2..2] & w_data919w[2..2]), (w_anode1007w[1..1] & w_data919w[1..1]), (w_anode1007w[0..0] & w_data919w[0..0]), w_anode921w[1..1]);
	w_anode1019w[] = ( (w_anode1019w[0..0] & data_wire[3..3]), enable_wire);
	w_anode1026w[] = ( (w_anode1026w[2..2] & (! w_data919w[2..2])), (w_anode1026w[1..1] & (! w_data919w[1..1])), (w_anode1026w[0..0] & (! w_data919w[0..0])), w_anode1019w[1..1]);
	w_anode1037w[] = ( (w_anode1037w[2..2] & (! w_data919w[2..2])), (w_anode1037w[1..1] & (! w_data919w[1..1])), (w_anode1037w[0..0] & w_data919w[0..0]), w_anode1019w[1..1]);
	w_anode1047w[] = ( (w_anode1047w[2..2] & (! w_data919w[2..2])), (w_anode1047w[1..1] & w_data919w[1..1]), (w_anode1047w[0..0] & (! w_data919w[0..0])), w_anode1019w[1..1]);
	w_anode1057w[] = ( (w_anode1057w[2..2] & (! w_data919w[2..2])), (w_anode1057w[1..1] & w_data919w[1..1]), (w_anode1057w[0..0] & w_data919w[0..0]), w_anode1019w[1..1]);
	w_anode1067w[] = ( (w_anode1067w[2..2] & w_data919w[2..2]), (w_anode1067w[1..1] & (! w_data919w[1..1])), (w_anode1067w[0..0] & (! w_data919w[0..0])), w_anode1019w[1..1]);
	w_anode1077w[] = ( (w_anode1077w[2..2] & w_data919w[2..2]), (w_anode1077w[1..1] & (! w_data919w[1..1])), (w_anode1077w[0..0] & w_data919w[0..0]), w_anode1019w[1..1]);
	w_anode1087w[] = ( (w_anode1087w[2..2] & w_data919w[2..2]), (w_anode1087w[1..1] & w_data919w[1..1]), (w_anode1087w[0..0] & (! w_data919w[0..0])), w_anode1019w[1..1]);
	w_anode1097w[] = ( (w_anode1097w[2..2] & w_data919w[2..2]), (w_anode1097w[1..1] & w_data919w[1..1]), (w_anode1097w[0..0] & w_data919w[0..0]), w_anode1019w[1..1]);
	w_anode921w[] = ( (w_anode921w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode930w[] = ( (w_anode930w[2..2] & (! w_data919w[2..2])), (w_anode930w[1..1] & (! w_data919w[1..1])), (w_anode930w[0..0] & (! w_data919w[0..0])), w_anode921w[1..1]);
	w_anode947w[] = ( (w_anode947w[2..2] & (! w_data919w[2..2])), (w_anode947w[1..1] & (! w_data919w[1..1])), (w_anode947w[0..0] & w_data919w[0..0]), w_anode921w[1..1]);
	w_anode957w[] = ( (w_anode957w[2..2] & (! w_data919w[2..2])), (w_anode957w[1..1] & w_data919w[1..1]), (w_anode957w[0..0] & (! w_data919w[0..0])), w_anode921w[1..1]);
	w_anode967w[] = ( (w_anode967w[2..2] & (! w_data919w[2..2])), (w_anode967w[1..1] & w_data919w[1..1]), (w_anode967w[0..0] & w_data919w[0..0]), w_anode921w[1..1]);
	w_anode977w[] = ( (w_anode977w[2..2] & w_data919w[2..2]), (w_anode977w[1..1] & (! w_data919w[1..1])), (w_anode977w[0..0] & (! w_data919w[0..0])), w_anode921w[1..1]);
	w_anode987w[] = ( (w_anode987w[2..2] & w_data919w[2..2]), (w_anode987w[1..1] & (! w_data919w[1..1])), (w_anode987w[0..0] & w_data919w[0..0]), w_anode921w[1..1]);
	w_anode997w[] = ( (w_anode997w[2..2] & w_data919w[2..2]), (w_anode997w[1..1] & w_data919w[1..1]), (w_anode997w[0..0] & (! w_data919w[0..0])), w_anode921w[1..1]);
	w_data919w[2..0] = data_wire[2..0];
END;
--VALID FILE
